<html>

<head>
<title>Newsletter February 1996</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">


<meta name="Microsoft Theme" content="prolog2 000, default">
<meta name="Microsoft Border" content="t, default">
</head>

<body bgcolor="#FFFFFF" text="#333333" link="#0000FF" vlink="#008080" alink="#00FFFF"><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="verdana, Arial, Helvetica">
<script language="JavaScript">var toRoot="../../";</script>
<script language="JavaScript" src="../../vipmenu/js/pdcbar.js"></script>
<script language="JavaScript" src="../../vipmenu/js/pdcbardef.js"></script>


<!--mstheme--></font><table class="scrElem" border="0" width="853" height="122">
  <tr>
     <td background="../../vipmenu/images/topbar-alt.gif" nowrap valign="top" ><!--mstheme--><font face="verdana, Arial, Helvetica">
                  <blockquote>
                    <blockquote>
                      <blockquote>
                        <blockquote>
                          <blockquote>
                            <blockquote>
                              <blockquote>
                  <p>
                      <strong>
                    
                      <font size="2">
                    
                      <br>
                      <br>
                      <br>
                      <br>
                      </font>
                        <a href="../../vipmenu/navigationbar.htm">
                      <font size="2"><br>
                      Navigation&nbsp; without Java Scripts</font></a></strong>
                 </p>
                              </blockquote>
                            </blockquote>
                          </blockquote>
                        </blockquote>
                      </blockquote>
                    </blockquote>
                  </blockquote>
     <!--mstheme--></font></td>
  </tr>
</table><!--mstheme--><font face="verdana, Arial, Helvetica">
</html>
<!--mstheme--></font></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><!--msnavigation--><td valign="top"><!--mstheme--><font face="verdana, Arial, Helvetica">

<h1 align="center"><!--mstheme--><font color="#000000">Newsletter<br>
February 1996&nbsp;<img src="images/eflag.gif" alt="UK issue" WIDTH="29" HEIGHT="17">&nbsp;<a href="96febd.htm"><img src="images/dflag.gif" alt="D issue" border="0" WIDTH="29" HEIGHT="17"></a><br>
<img src="images/new.gif" alt="Graphical text: New" hspace="0" WIDTH="234" HEIGHT="204"><img src="images/box2.jpg" alt="box2.jpg (13005 bytes)" WIDTH="279" HEIGHT="206"><!--mstheme--></font></h1>

<p align="center"><b>Visual Prolog is here !</b> -<blink> Buy it now from your local
dealer.</blink><br>
<br>
</p>

<h2><!--mstheme--><font color="#000000">Visual Prolog 4.0<!--mstheme--></font></h2>

<p>We at PDC are all very proud to present the final release-version ofthe Visual Prolog
system. PDC's development team (distributed between Atlanta,USA, Copenhagen, Denmark and
St. Petersburg, Russia) has been working practicallynight and day for the last several
months to complete Visual Prolog. It'sfinally here!<br>
With Visual Prolog, you gain all the traditional advantages of workingwith Prolog, but
using a rich state-of-the-art development environmentwith all the tools needed to make
sophisticated MS-Windows 3.x, Windows95, NT or OS/2 PM applications.<br>
</p>

<h2><!--mstheme--><font color="#000000">Standard and Professional Versions<!--mstheme--></font></h2>

<p>Visual Prolog comes in two versions: Standard and Professional. TheStandard Version is
a complete development environment for developing 16bit applications for Windows 3.1 or
Win95. The Professional Version addsthree important features:</p>

<ol>
  <li>32 bit development for Windows 95, NT or OS/2.<br>
  </li>
  <li>The complete Prolog source code to the Visual Development Environment<br>
  </li>
  <li>The Visual Prolog compiler in library form. This allows you to relinkthe VDE with source
    code changes, and even to include the Prolog compilerwithin your own application (requires
    a supplementary license).</li>
</ol>

<p>To create 32-bit Windows executables for NT or Win95, you must alsohave Visual C++. To
create 32-bit OS/2 executables, you need either BorlandC++ for OS/2 or IBM CSet. The
Professional Version includes both a 16-bitWindows version of the Visual Development
environment, as well as a 32-bitversion. A 32-bit OS/2 version of the of the development
environment willbe provided free of charge when complete.</p>

<h2><!--mstheme--><font color="#000000">Well Tested<!--mstheme--></font></h2>

<p>Visual Prolog has been in beta testing for about 18 months and the userstold us that
it's powerful, easy to use and remarkably reliable for a betaimplementation. The feedback
has improved with every successive beta version,and among the comments were:<br>
</p>

<!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><i>I'm enjoying VIP - it's a brilliant piece of software</i><!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><i>I would like to thank you for an excellent product. It fits in verywell for the
    development work I am doing.</i><!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><i>I'm enjoying using Visual Prolog. It's very functional and logical.</i><!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><i>By the way I enjoy your external db system very much. I do marvelousthings with it,
    and the speed is stunning.</i><!--mstheme--></font><!--msthemelist--></td></tr>
<!--msthemelist--></table><!--mstheme--><font face="verdana, Arial, Helvetica">

<p>Our customers also gave us important feedback on areas where we couldimprove the
product. Since PDC is committed to building customer satisfactionwe've done our best to
address a number of these areas in this new releaseof Visual Prolog.</p>

<h2><!--mstheme--><font color="#000000">The AI Language<!--mstheme--></font></h2>

<p>In today's complex programming world, we believe that more than everProlog has merit.
Prolog was originally designed to be an AI language,and it is of course very well suited
for expert sys-tems, planning systemsand similar AI applica-tions. Frame or rule-based
systems, forward or backwardchaining, pat-tern matching, and constraint-resolution systems
are allnatural and elegant expressions of Prolog's underlying semantics.</p>

<h2><!--mstheme--><font color="#000000">And Much More<!--mstheme--></font></h2>

<p>However, the strengths of Prolog extend far beyond the boundaries ofAI. The high level
of abstraction, the ease and simplicity with which complexdata structures are represented,
and the protection and safety inherentin the language allow for a consider-able reduction
of development timesin any discipline or problem-solving strategy. Building advanced
com-mercialand industrial applications based on today's windowing environments demandsjust
such a tool.</p>

<p>Visual Prolog addresses the same target market as SQL Database Systems,C++ development
systems or other language tools like Visual Basic, Borland'sDelphi, or IBM's Visual Age.
While there is a trend in many organizationstoday to solve everything with database
technology, this approach oftenleads to bad results in both development time and the
performance of thefinal system.</p>

<p>An application developed in Prolog will often have superior performanceand a higher
degree of user-friendliness combined with shorter developmenttimes.</p>

<p>Visual Prolog programs are very fast because of PDC's highly optimizingcompiler - in
many cases com-parable to those created with C or C++. And,as an increasing number of
organizations find it difficult and error-proneto develop programs in C++, negligible
speed differences in the final applicationsare increasingly hard to justify.</p>

<blockquote>
</blockquote>

<p>&nbsp;</p>

<h2><!--mstheme--><font color="#000000">Visual Prolog is now delivered on CD<!--mstheme--></font></h2>

<p>With all the features of the Professional version installed, it occupiesmore than 100
Mbytes of hard disk! Since it now requires 19 compresseddisks to install Visual Prolog, we
decided it was time to go to CD, withall the added benefits. The CD contains a setup
directory for installingthe Visual Prolog system, but it also contains a complete
ready-made installationso it is possible to run Visual Prolog directly from the CD. There
wasalso room to add some shareware tools to the CD like the Microsoft Wordviewer</p>

<p>.<img src="images/cd1.jpg" alt="cd1.jpg (12195 bytes)" WIDTH="292" HEIGHT="199"></p>

<h2><!--mstheme--><font color="#000000">Visual Prolog Documentation<!--mstheme--></font></h2>

<blockquote>
  <!--mstheme--></font><table border="2" bordercolordark="#669999" bordercolorlight="#CCFFFF">
    <tr>
      <td valign="top"><!--mstheme--><font face="verdana, Arial, Helvetica"><b>Getting Started:</b> Provides an overview of Visual Prolog and
      explainshow to install it. The book also contains a detailed example called
      the&quot;Guided Tour&quot;, a good starting point for learning how to builda Windowing
      application in Visual Prolog.<!--mstheme--></font></td>
      <td><!--mstheme--><font face="verdana, Arial, Helvetica"><b>Language Tutorial:</b> This gives a step by step introduction tothe Prolog
      Programming language and the core built-in functions<br>
      <p>&nbsp;<!--mstheme--></font></td>
    </tr>
    <tr>
      <td><!--mstheme--><font face="verdana, Arial, Helvetica"><b>Visual Development Environment:</b>This book explains how to usethe Development
      Environment for Visual Prolog, including the various resourceeditors, code experts etc.<br>
      <br>
      <br>
      <br>
      <!--mstheme--></font></td>
      <td valign="top"><!--mstheme--><font face="verdana, Arial, Helvetica"><b>Visual Programming Interface:</b>This describes the VPI, which isthe
      portable, graphical API which has been developed for Visual Prolog.The complete MS-Word
      files for the books are also included on the CD alongwith the Microsoft Word viewer for
      reading the files on-line or makingprint-outs..<br>
      <!--mstheme--></font></td>
    </tr>
  </table><!--mstheme--><font face="verdana, Arial, Helvetica">
</blockquote>

<p>&nbsp;</p>

<h2><!--mstheme--><font color="#000000"><a href="vip_xamp.htm">Example</a> Visual Prolog Applications<!--mstheme--></font></h2>

<!--msthemeseparator--><p align="center"><img src="../_themes/prolog2/modhorsd.gif" width="300" height="10"></p>

<h2><!--mstheme--><font color="#000000">New Features of Visual Prolog<!--mstheme--></font></h2>

<h3><!--mstheme--><font color="#000000">Code Experts<!--mstheme--></font></h3>

<p>The greatest strength of Visual Prolog is probably the combination ofthe Layout tools
and the <a href="newfeat.htm#code_experts">Code Experts</a>.The code experts take care of
much of the work for you, meaning that youcan create a new application in a few minutes,
and incrementally en-hancethis from a prototype to your final application. <i>Trivial work
is donefor you automatically'</i> </p>

<!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a href="newfeat.htm#code_experts">Experts</a><!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a href="newfeat.htm#layout_editors">Editors</a><!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a href="newfeat.htm#additional_features">Additional Features</a><!--mstheme--></font><!--msthemelist--></td></tr>
<!--msthemelist--></table><!--mstheme--><font face="verdana, Arial, Helvetica">

<p>&nbsp;</p>

<!--msthemeseparator--><p align="center"><img src="../_themes/prolog2/modhorsd.gif" width="300" height="10"></p>

<h2><!--mstheme--><font color="#000000"><a href="ext_tool.htm">Extra Tools</a> shipped with Visual Prolog<!--mstheme--></font></h2>

<!--msthemeseparator--><p align="center"><img src="../_themes/prolog2/modhorsd.gif" width="300" height="10"></p>

<h2><!--mstheme--><font color="#000000">Other Visual Prolog Facilities<!--mstheme--></font></h2>

<h3><!--mstheme--><font color="#000000">A Fast, Optimizing Compiler<!--mstheme--></font></h3>

<p>The compiler generates tight native machine code that can compete withthe code
generated by Pascal or C compilers. The compiler performs severaldifferent analyses
ranging from a global flow analysis and determinismcheck down to register allocation and
peep-hole optimization.</p>

<h3><!--mstheme--><font color="#000000">Type System and Flow-Analyzer<!--mstheme--></font></h3>

<p>A distinguishing characteristic of PDC's version of Prolog is its typesystem which
provides an extra level of security in programming. The typedeclarations document the code
and allow the compiler to helpfully pointout common typing mistakes as well as more
serious logic mistakes in theearly stages of development. By serving as a type of contract
between programmerand development over the entire product life-cycle.</p>

<h3><!--mstheme--><font color="#000000">Database Subsystem<!--mstheme--></font></h3>

<p>A fast and extremely flexible database subsystem makes Visual Prologa more suitable
choice for database applications than many 4GLs. The databasesystem supports a collection
of distinct ordered chains of Prolog terms,where database terms can be any abstraction
supported by the language itself,from traditional records to lists, trees or graphs.<br>
The database system can directly access individual terms, or it can backtrackthrough
chains of terms to generate or match particular values. The termscan be stored in any one
of three locations: in a file, in memory or inEMS-type expanded memory (under DOS). The
database also supports B+ trees,which provide fast data retrieval and the ability to
change term orderingefficiently.<br>
If you are using the database in a LAN application you can take advantageof Visual
Prolog's support for file sharing in the external database system.Multi-user database
access is provided using a mechanism that efficientlyserializes file access inside of
transactions. This means that a Prologdatabase can be opened by several users
simultaneously.</p>

<h3><!--mstheme--><font color="#000000">SQL Bindings<!--mstheme--></font></h3>

<p>Visual Prolog's external database system is often the fastest and mostflexible way to
store large amounts of data. However data might alreadyexist in another database system,
or the application might need to sharedata with other applications that can only make use
of particular databasetechnology. In such cases, it becomes extremely important to be able
tolink to external database systems, and Visual Prolog's portable SQL bindingsmake this
simple for most databases.</p>

<h3><!--mstheme--><font color="#000000">Inter-process Communication<!--mstheme--></font></h3>

<p>The OS/2 version of Visual Prolog adds support for full-featured
asynchronousinter-process communication using named pipes in a multi-threaded
sub-system.Arbitrarily complex Prolog terms can be sent between multiple processeson a
single machine or between programs over a network. Database or logicservers can easily be
constructed with this facility. On the Windows platform,NETDDE can similarly be used to
create Client-Server applications.</p>

<h3><!--mstheme--><font color="#000000">Exception Handling and Error Trapping<!--mstheme--></font></h3>

<p>Visual Prolog includes powerful mechanisms for handling run-time errors,as well as
controlling user breaks. The programmer may select among variouslevels of error-checking
and error-reporting.</p>

<h3><!--mstheme--><font color="#000000">Portable Operating System Functions<!--mstheme--></font></h3>

<p>Visual Prolog provides a portable interface to the operating system.Functions like
copying, renaming and deleting files, invoking other programs,returning the date and time,
etc. work the same way on all platforms.</p>

<h3><!--mstheme--><font color="#000000">Compression Predicates Included<!--mstheme--></font></h3>

<p>The compression library, which has previously been sold separately,is now included in
the Visual Prolog library. This means that Prolog applicationscan easily compress data.
This can be used before sending data over a network,before storing pictures or other
compressible data in databases, or asin the Visual Prolog installation program, to pack a
set files on diskettes.</p>

<h3><!--mstheme--><font color="#000000">Installation Tool for VIP Applications<!--mstheme--></font></h3>

<p>The source code for the setup program, which is used to install theVisual Prolog
system, is included. It comes with a companion build program,which based on a script can
create compressed diskettes or CD images. Thisgives VIP programmers a free installation
program that is more flexiblethan any other tool on the market!</p>

<h3><!--mstheme--><font color="#000000">Source Code to VDE Included<!--mstheme--></font></h3>

<p>If you have the Professional Version of Visual Prolog, you will findthe Prolog source
code for the Visual Development Environment in the VDESRCsub-directory, which allows you
to do any customization of the VDE you want.</p>

<h2><!--mstheme--><font color="#000000">Examples of Visual Prolog Code<!--mstheme--></font></h2>

<p>The following code fragment shows the code required to create a windowwith a tree
display of the include structure of the Visual Prolog VDE.The predicate collect_tree
builds the tree structure in the usual findallloop. The predicate project_tree_ event is
the event-handler that willreceive notice of any actions in the window. In this case,
there are provisionsonly for closing the window, and in the event the user double-clicks
ona node. In this case, the editor is activated with the corresponding sourcetext.</p>

<p>/***********************************************<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Project tree<br>
***********************************************/<br>
<br>
&nbsp; project_tree_event: EVENT_HANDLER<br>
CLAUSES<br>
&nbsp; project_tree(W):-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; projectfilename(Project),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get_exename(Project,ExeName),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retractall(_, seen_nodes),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; collect_tree(ExeName,9,TREE),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; make_tree_win(W,&quot;Test tree&quot;,TREE,[],<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
project_tree_event,_),!.<br>
&nbsp; project_tree_event(W,e_CloseRequest,0):-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; win_Destroy(W),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
!.<br>
&nbsp; project_tree_event(W,e_MouseDbl(_,_,_,_),0):-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get_selected_node(W,FileName),!,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; not_bin_file(FileName),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; open_file_editor(FileName).<br>
<br>
</p>

<p>The next example shows how to use the dialog package to handle a dialog.The dialog
package takes care of initializing all parts of a dialog, andit does various type and
range checks on the input fields. After the dialogis completed, it delivers the output
values in a list. Note that this codeis generated automatically when the dialog is
designed using the dialogeditor.<br>
</p>

<p>PREDICATES<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setup_env % Brings up the dialog<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; % Handle the return values<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setup_env(DLG_VAL_LIST, INTEGER)<br>
CLAUSES<br>
setup_env:-<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveconfig(SAVECONFIG), % Get the variable from
fact<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveedit(SAVEEDIT), % Another variable<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new_modal_dialog(d_env,
&quot;Environment&quot;,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
[df(d_env_saveconfig,checkbox(SAVECONFIG),nopr),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
df(d_env_saveedit,checkbox(SAVEEDIT),nopr)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
],[],no_validation,no_user_action,VALLIST,ANSWER),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setup_env(VALLIST,ANSWER).<br>
</p>

<p>The final example shows what code is needed to create a window witha toolbar on the
right side. This code can be generated automatically bythe resource expert. The various
constants are resource identifiers whichname the icons used as button images.<br>
</p>

<p><img src="images/right_tb.gif" alt="Screen Dump" align="center" hspace="15" vspace="15" WIDTH="276" HEIGHT="336"></p>

<p>toolbar_create(tb_right,color_blue,W,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [tb_ctrl(1, pushb, tbcut_up,&nbsp; tbcut_dn, &nbsp;
&quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(2, pushb, tbcopy_up, tbcopy_dn,
&quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(3, pushb, tbok_up,&nbsp;&nbsp; tbok_dn,
&nbsp;&nbsp; &quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(11,checkb,switch_off,switch_on,
&quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; separator,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(12,checkb,rot_off,&nbsp;&nbsp; rot_on,
&nbsp;&nbsp;&nbsp; &quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; separator,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(4, pushb, flower_up, flower_dn,
&quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; separator,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(5, pushb, tbcopy_up, tbcopy_dn,
&quot;&quot;,b_true,b_true),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tb_ctrl(6, pushb, tbok_up,&nbsp;&nbsp; tbok_dn,
&nbsp;&nbsp; &quot;&quot;,b_true,b_true)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ], toolbar_action).<br>
<br>
</p>

<!--msthemeseparator--><p align="center"><img src="../_themes/prolog2/modhorsd.gif" width="300" height="10"></p>

<h2><!--mstheme--><font color="#000000">The Visual Prolog WWW Homepage<!--mstheme--></font></h2>

<p>The address of the homepage for Visual Prolog is: http://www.visual-prolog.com<br>
From the Visual Prolog WWW homepage, you can read the latest news aboutVisual Prolog,
study the Frequent Asked Questions (FAQ) or download patches.You can also query our sales
department via E-mail and you can even orderour products and upgrades on-line. Feedback to
our support department andbug reporting are also possible.<br>
As a new service, we have started to upload new versions of VIP tools whenthere are new
features or new tools. The tools are maintained with versionnumbers and documents that
describe how to use and manage the tools. Wethink this will be a popular service, and we
even hope that users willcontribute their own tools here.<br>
<!--mstheme--></font><!--msnavigation--></td></tr><!--msnavigation--></table></body>
</html>
