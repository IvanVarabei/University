<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title>HTML document for the World Wide Web</title>


<meta name="Microsoft Theme" content="prolog2 000, default">
<meta name="Microsoft Border" content="t, default">
</head>

<body bgcolor="#FFFFFF" text="#333333" link="#0000FF" vlink="#008080" alink="#00FFFF"><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="verdana, Arial, Helvetica">
<script language="JavaScript">var toRoot="../../";</script>
<script language="JavaScript" src="../../vipmenu/js/pdcbar.js"></script>
<script language="JavaScript" src="../../vipmenu/js/pdcbardef.js"></script>


<!--mstheme--></font><table class="scrElem" border="0" width="853" height="122">
  <tr>
     <td background="../../vipmenu/images/topbar-alt.gif" nowrap valign="top" ><!--mstheme--><font face="verdana, Arial, Helvetica">
                  <blockquote>
                    <blockquote>
                      <blockquote>
                        <blockquote>
                          <blockquote>
                            <blockquote>
                              <blockquote>
                  <p>
                      <strong>
                    
                      <font size="2">
                    
                      <br>
                      <br>
                      <br>
                      <br>
                      </font>
                        <a href="../../vipmenu/navigationbar.htm">
                      <font size="2"><br>
                      Navigation&nbsp; without Java Scripts</font></a></strong>
                 </p>
                              </blockquote>
                            </blockquote>
                          </blockquote>
                        </blockquote>
                      </blockquote>
                    </blockquote>
                  </blockquote>
     <!--mstheme--></font></td>
  </tr>
</table><!--mstheme--><font face="verdana, Arial, Helvetica">
</html>
<!--mstheme--></font></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><!--msnavigation--><td valign="top"><!--mstheme--><font face="verdana, Arial, Helvetica">

<h2><!--mstheme--><font color="#000000">Neue Leistungsmerkmale von Visual Prolog<!--mstheme--></font></h2>

<!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a name="OLE_LINK2"></a>Experts<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">&nbsp;
    <!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Die <a href="newfeatd.htm#code_experts">Code Experts</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#application_expert">Application </a>Expert<!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#window_expert">Window </a>Expert<!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#dialog_expert">Dialog </a>Expert<!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#toolbar_expert">Toolbar </a>Expert<!--mstheme--></font><!--msthemelist--></td></tr>
    <!--msthemelist--></table><!--mstheme--><font face="verdana, Arial, Helvetica">
  <!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Die<a name="NewFeat_Editors"></a>Editors<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">&nbsp;
    <!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der Dialog und Window<a href="newfeatd.htm#dialog_and_window_layout_editor">layout
        Editor</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#menu_editor">Menüeditor</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#toolbar_editor">Toolbareditor</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a href="newfeatd.htm#icon_cursor_and_bitmap_editor">Icon-, Cursor- und Bitmapeditor</a><!--mstheme--></font><!--msthemelist--></td></tr>
    <!--msthemelist--></table><!--mstheme--><font face="verdana, Arial, Helvetica">
  <!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a name="NewFeat_Additional"></a>Additional Features<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul1d.gif" width="14" height="13" hspace="14"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">&nbsp;
    <!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Das Integriertes <a href="newfeatd.htm#integrated_make_facility">Make System</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Der <a href="newfeatd.htm#source_code_browser">Sourcecode Browser</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a href="newfeatd.htm#text_editor_with_token_coloring">Texteditor</a> mit farbigen Token<!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Portables, High Level <a href="newfeatd.htm#high_level_portable_gui_api">GUI API (VPI)</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica">Autorensystem zum <a href="newfeatd.htm#help_authoring_system">Erzeugen
        kontextsensitiver Hilfe</a><!--mstheme--></font><!--msthemelist--></td></tr>
      <!--msthemelist--><tr><td valign="baseline" width="42"><img src="../_themes/prolog2/modbul2d.gif" width="12" height="12" hspace="15"></td><td valign="top" width="100%"><!--mstheme--><font face="verdana, Arial, Helvetica"><a href="newfeatd.htm#resource_import">Resource Import</a><!--mstheme--></font><!--msthemelist--></td></tr>
    <!--msthemelist--></table><!--mstheme--><font face="verdana, Arial, Helvetica">
  <!--mstheme--></font><!--msthemelist--></td></tr>
<!--msthemelist--></table><!--mstheme--><font face="verdana, Arial, Helvetica">
<!--msthemeseparator--><p align="center"><img src="../_themes/prolog2/modhorsd.gif" width="300" height="10"></p>

<h3><!--mstheme--><font color="#000000"><a name="Code_Experts"></a>Die Code Experts<!--mstheme--></font></h3>

<p>Die größte Stärke von Visual Prolog ist sicherlich die Kombination der
Layoutwerkzeuge mit den Code-Experts. Die Code-Experts nehmen Ihnen die meiste Arbeit ab,
d.h., daß Sie eine neue Anwendung in einigen Minuten erzeugen und diese Stufe für Stufe
von einem Prototyp bis zum fertigen Produkt erweitern können. <i>Einfache Arbeiten werden
automatisch erledigt.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="Application_Expert"></a>Der Application Expert<!--mstheme--></font></h3>

<p align="left">Der
Application-Expert wird zur Erzeugung eines neues Projekt verwendet. Es erzeugt das
Grund-gerüst einer neuen Anwendung: Eine Projekt-Datei, Source-Dateien, Menüs, Toolbars,
Icons, Bitmaps, und sogar eine Hilfe-Datei. Das spart viele Stunden manueller
Arbeit!</p>

<p align="left"><a href="images/apexp.gif"><img src="apexp_small.gif" alt="Screen Dump" hspace="0" vspace="10" width="100" height="48"></a></p>

<p>Das Projekt, das von dem Application-Expert erzeugt wird, kann sofort kompiliert und
ausgeführt werden. Der erzeugte Code bildet einen Rahmen, in den Sie leicht die
Einzelheiten Ihrer Anwendung anfügen können, und Sie brauchen sich nicht um die vielen
Details, die Sie bei einer gewöhnlichen Windows-programmierung beachten müßten, zu
kümmern. Die VPI Schicht stellt die Defaults (Standard-Verhalten) für alle Events
(Ereignisse) bereit. So brauchen Sie nur noch Code für die Events einzufügen, die Sie
behandeln wollen. <i>Erzeugt eine neue Anwendung in weniger als einer Minute.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="Window_Expert"></a>Der Window Expert<!--mstheme--></font></h3>

<p>Ein GUI Programm muß auf Events, wie z.B. einen Tastendruck, die Aktivierung eines
Controls, eine Menü-Auswahl, eine Maus-Bewegung, eine Größen-veränderung oder Bewegung
des Fensters, etc., reagieren. In Visual Prolog geschieht das durch die Verbindung eines
Prolog-Prädikates mit einem Fen-ster. Dieses Prädikat dient als Event-Handler für das
Fenster und wird jedesmal, wenn etwas im Fenster geschieht, aufgerufen.</p>

<p>Die Hauptaufgabe des Window-Expert ist die individuellen Prolog-Klauseln (des
Event-Handlers) zu verwalten, die auf die unterschiedlichen Events des Window-Systems
reagieren. Im Dialog mit dem Window-Expert (siehe Bild) werden alle Event-Typen angezeigt.
Mit Hilfe des &quot;Add Clause&quot; Knopfes wird die Klausel an das ausgewählte Event
angebunden.</p>

<p><a href="images/windex.gif"><img src="windex_small.gif" alt="Screen Dump" hspace="10" width="100" height="87"></a></p>

<p>Im folgenden
Beispiel zeigen wir, wie man ein kleines Popup Fenster erzeugt, das erscheint, wenn die
Maus-Taste innerhalb eines Fenster geklickt wird. Wir fügen dazu den Code für das
e_MouseDown Event (das Ereignis wird erzeugt, wenn ein Maus-Knopf geklickt wird), in
unsere Anwendung ein. Anschließend wählen wir das e_MouseDown Event im Code-Expert aus
und drücken den &quot;Add Clause&quot;-Knopf:</p>

<p><br>
<br>
<tt>BEGIN ww, e_MouseDown<br>
win_ww_eh(Window,e_MouseDown(pnt(X,Y),ShiftCtlAlt,MouseButton),0):-<br>
dlg_Note(&quot;Hi Mum&quot;).<br>
%END ww, e_MouseDown</tt><br>
<br>
</p>

<p>Beachten Sie, das die Klausel in eine %BEGIN - %END Sequenz eingeschlossen ist. Diese
wird vom Window-Expert benötigt, um den Code später wiederzufinden. Wenn eine Klausel
bereits für ein Event existiert, wechselt der &quot;Add Clause&quot;-Knopf zum &#132;Edit
Clause&quot;-Knopf. Dieser kann dann zum schnellen Positionieren im Sourcemodul benutzt
werden, um zu Editieren, oder um neue Funk-tionalität anzufügen.</p>

<p>Der Name des Event-Handler Prädikates ist win_ww_eh und hat drei Argumente: Das Erste
ist Window, eine Variable, die für Operationen im Fenster benutzt wird. Das nächste
Argument ist eine Struktur, die selbst drei Argumente hat: 1) Die Position, an der die
Maus geklickt wurde, 2) der Status der Shift, Control und Alt - Tasten, zum Zeitpunkt als
der Maus-Knopf aktiviert wurde und als letztes: 3) welcher Maus-Knopf geklickt wurde. Das
letzte Argument für das Prädikat ist ein Return-Value (Rückgabe-Wert), der in diesem
Fall Null ist. Um den kleinen Dialog aufzurufen, wird das eingebaute dlg_Note Prädikat
verwendet. Popup Menüs im Editor erlauben ein schnelles einfügen von Aufrufen,
Konstanten, Domänen-namen, Schlüsselwörtern, Resource Identifier usw., so daß ein
Programmieren nahezu ohne Tastatur möglich ist.<i> Der Code für das User-Interface
läßt sich leicht einfügen und editieren.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="Dialog_Expert"></a>Der Dialog Expert<!--mstheme--></font></h3>

<p><a href="images/diapack.gif"><img src="diapack_small.gif" alt="Screen Dump" hspace="15" width="100" height="64"></a><br>
Der Kern des Code-Experts für Dialoge ist ein Werkzeug, das es ermöglicht, eine Vielzahl
von High-Level Eigenschaften von Kontrollelementen zu spezifizieren und ebenfalls
Programmvariablen mit den Werten von Kontrollelementen zu verknüpfen. Unterschiedliche
Überprüfungen, wie z.B. ob ein Feld ein Integer-Feld ist, in einem bestimmten Bereich
liegt, oder ob ein String die maximal zulässige Länge erreicht hat, erfolgen
automatisch. Das einzige, was der Programmierer zu tun hat, ist die entsprechenden
Grenzwerte zu setzen und nach Beendigung des Dialogs die Rückgabewerte auszuwerten. <i>Einfaches
Handhaben von Dialogen.</i><br clear="all">
</p>

<h3><!--mstheme--><font color="#000000"><a name="Toolbar_Expert"></a>Der Toolbar Expert<!--mstheme--></font></h3>

<p>Visual Prolog unterstützt Toolbars, Hilfe-Zeilen und sogar Tooltips. Der
Toolbar-Expert kann Ihnen durch Erzeugen von Standard-Code für Toolbar-handling helfen,
und mit unserem Toolbar-Editor ist es ein Leichtes, Ihren Toolbar dynamisch anzuordnen und
seine Eigenschaften zu spezifizieren. <i>Kein Programmieren für Toolbars und Hilfe-Zeilen
notwendig.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="Layout_Editors"></a>Die Layout-Editoren<!--mstheme--></font></h3>

<p>Die Layouteditoren werden benutzt, um die Anwenderschnittstelle für Ihre Anwendungen
inter-aktiv zu entwerfen.</p>

<h3><!--mstheme--><font color="#000000"><a name="Dialog_and_Window_Layout_Editor"></a>Der Dialog- und Windowlayout-Editor<!--mstheme--></font></h3>

<p>Dialoge und Fenster werden mit dem Dialogeditor und Windoweditor gestaltet. Sie können
sie benutzen, um eine Vielzahl von Kontrollelementen, wie Editierfelder, Pushbuttons,
Checkboxen usw., in einen Dialog oder ein Fenster einzufügen. Es gibt vielfältige
Möglichkeiten, die es dem Entwickler leicht machen, das richtige Layout zu entwerfen: Die
Kontroll-elemente können zu Gruppen zusammen-gefaßt werden. Diese Gruppen können
gemeinsam ausgerichtet, bewegt und in ihrer Größe verändert werden.
&#132;Tabstops&quot; und die &#132;visit order&quot;, d.h. die Reihenfolge in der die
Kontrollelemente beim Benut-zen der Tabtaste angesprungen werden, können konfiguriert
werden. Jedes einzelne Kontrollelement kann über das Setzen einer Vielzahl von
Grund-attributen an die Ansprüche der jeweiligen An-wendung angepaßt werden.</p>

<p><a href="images/layout.gif"><img src="layout_small.gif" alt="Screen Dump" border="1" hspace="20" width="100" height="97"></a></p>

<p>Jedes
Kontrollelement erhält einen Namen, der zu einer Sourcecodekonstanten wird. Mit diesem
Namen lassen sich die Kontrollelemente dann auch im weit-eren Sourcecode ansprechen, z.B.
wenn Sie den Inhalt eines Kontrollelementes abfragen oder neu setzen wollen. Wenn
Kompilieren oder Linken, im Menü gewählt wird, werden diese Konstanten in eine Datei
geschrieben, die in Ihre Source-Dateien ein-gebunden wird.<br clear="left">
<i>Leichtes Entwerfen von Dialogen und Fenstern.</i></p>

<p>&nbsp;</p>

<h3><!--mstheme--><font color="#000000"><a name="Menu_Editor"></a>Der Menüeditor<!--mstheme--></font></h3>

<p align="left"><a href="images/menued.gif"><img src="menued_small.gif" alt="Screen Dump" hspace="50" width="100" height="72"></a>Pulldown-
oder Popup-Menüs können vollständig mit dem neuen Menüeditor erstellt werden. Für
jeden Menüeintrag kann eine Konstante spezifiziert oder automatisch generiert werden.
Diese wird dann durch den Event-Handler an das Programm weitergereicht, wenn der
Menüeintrag zur Laufzeit aktiviert wird. Der Menüeditor erlaubt auch die Definition von
Hot-Keys (Accelerator-Keys) für spezielle Kommandos. Im Window-Expert kann angeben
werden, welches Prädikat aufgerufen werden soll, wenn der Menü-eintrag aktiviert wird. <i>Interaktives
Entwerfen von Men</i>üs.<br>
<br>
</p>

<h3><!--mstheme--><font color="#000000"><a name="Toolbar_Editor"></a>Der Toolbar Editor<!--mstheme--></font></h3>

<p><a href="images/tbed.gif"><img src="tbed_small.gif" alt="Screen Dump" hspace="15" width="100" height="37"></a></p>

<p>Prolog
unterstützt Toolbars, Hilfe-Zeilen und sogar Tooltips. Der Toolbar-Expert kann Ihnen
durch Erzeugen von Standard-Code für Toolbar-handling helfen, und mit unserem
Toolbar-Editor ist es ein Leichtes, Ihren Toolbar dynamisch anzuordnen und seine
Eigenschaften zu spezifizierenEasy layout of dialogs and windows<br>
<i>Kein Programmieren für Toolbars und Hilfe-Zeilen notwendig.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="Icon_Cursor_and_Bitmap_Editor"></a>Icon-, Cursor- und Bitmapeditor<!--mstheme--></font></h3>

<p><a href="images/bited.gif"><img src="bited_small.gif" alt="Screen Dump" hspace="15" vspace="10" width="100" height="63"></a></p>

<p>Windowsprogramme
verwenden Bitmaps an vielen Stellen. Icons, Cursor, Symbolknöpfe und Toolbars verlangen
alle kleine Bilder. Visual Prolog besitzt einen Editor, der speziell zum Editieren von
solchen Bitmaps ausgelegt ist.</p>

<p><br>
Der Editor kann Bilder rotieren und verschieben. Es gibt eine spezielle
Spiegelungsmöglichkeit, um leicht symetrische Bilder zu erzeugen. Hotspots (unsichtbare
Felder, die bei Fokuserhalt einen Event senden) können, z.B. für Cursor, gesetzt werden.</p>

<p>Alle Cursor, Icons und Bitmaps die in einem Projekt erzeugt wurden, können einfach von
anderen Editoren angewählt werden. Aus bereits erstellten Bitmaps kann z.B. ein Toolbar
in wenigen Minuten erzeugt werden. <i>Bequemes Erstellen von Bitmaps.</i><br clear="right">
</p>

<h1><!--mstheme--><font color="#000000"><a name="Additional_Features"></a>Additional Features<!--mstheme--></font></h1>

<h3><!--mstheme--><font color="#000000"><a name="Integrated_Make_Facility"></a>Integriertes Make<!--mstheme--></font></h3>

<p><a href="images/make.gif"><img src="make_small.gif" alt="Screen Dump" hspace="15" width="100" height="61"></a>
</p>

<p>Das Make-System
übernimmt die gesamte Kompilierung, das Linken, die Resource-Kompi-lierung, das Binden
der Resourcen, usw. Es über-prüft die Aktualität aller Dateien (anhand der Datums- und
Zeiteinträge im Dateiverzeichnis) und entscheid-et, welche Neukompilierungen notwendig
sind. Um die Struktur des Projekts zu betrachten, können die Abhängigkeiten als Baum
dargestellt werden. <i>Die Anwendung wird automatisch gebunden.</i><br clear="left">
</p>

<h3><!--mstheme--><font color="#000000"><a name="Source_Code_Browser"></a>Der Sourcecode-Browser<!--mstheme--></font></h3>

<p><a href="images/browse.gif"><img src="browse_small.gif" alt="Screen Dump" hspace="15" vspace="10" width="100" height="52"></a></p>

<p>Der Visual Prolog Compiler generiert Information für den Code-Browser. Damit ist es
möglich, Prädikate in einem Modul zu untersuchen, durch alle globalen Prädikate des
Projektes zu blättern oder festzu-stellen, an welcher Stelle ein Prädikat oder eine
Domäne definiert wurde. <i>Übersichtliche Darstellung des Sourcecode.</i><br clear="right">
</p>

<h3><!--mstheme--><font color="#000000"><a name="Text_Editor_with_Token_Coloring"></a>Texteditor mit farbigen Token<!--mstheme--></font></h3>

<p><a href="images/toked.gif"><img src="toked_small.gif" alt="Screen Dump" hspace="15" vspace="10" width="100" height="77"></a><br>
Visual Prolog beinhaltet einen leistungsfähigen Editor der Visual Prolog
Schlüsselwörter und andere Sprachelemente farbig darstellt. Welche Farben benutzt
werden, ist vom Benutzer definierbar. Die Farben machen es viel leichter zwischen
Prädikatnamen, Parametern, Kommentaren, usw. zu unterscheiden. Der Editor unterstützt
ein unbegrenztes Undo und Redo, Suchen und Ersetzen, Ausschneiden, Kopieren und Einfügen,
sowie Drag und Drop für das schnelle verschieben von Blöcken. Wie bei den vorherigen
Versionen, kann auch dieser Editor in Ihre eigene Anwendung eingebaut werden.</p>

<p>Der Editor hat die einzigartige Eigenschaft, wenn er innerhalb der VDE benutzt wird,
alles über Prädikate, Benutzer-Schnittstellen-Komponenten, Farben, Konstanten usw. von
Visual Prolog zu wissen. Sie können alle diese Dinge in Ihren Sourcecode mit einem
Mausklick einfügen.</p>

<p><i>Schnelle Generierung von leicht lesbarem Prolog-Code.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="High_Level_Portable_GUI_API"></a>Portables, High Level GUI API (VPI).<!--mstheme--></font></h3>

<p>Für Visual Prolog wurde ein portables Prolog GUI API definiert. Das API (Application
Programming Interface) ist eine Abstraktion der Eigenschaften, die in den
Basis-Windowsumgebungen der Windows 3.x, Windows 95, NT und OS/2 PM Plattformen vorhand-en
sind. Damit erhält der Programmierer ein portables Visual Prolog API, das einfacher zu
benutzen ist, als die ursprünglichen API´s. Um den Benutzer aber nicht einzuschränken,
beinhaltet das Visual Prolog API auch plattformspezifische Funktionalitäten und Optionen,
die nicht portabel sind. Wenn eine platform-spezifische Funktionalität benutzt wird, ist
die Anwendung entweder nicht portabel oder es muß die Technik der &quot;bedingten
Kompilierung&quot; verwendet werden, um die unterschiedliches Plattformen zu
berücksichtigen. Es ist ebenfalls möglich, das API zu verändern und zu erweitern. Die
Sourcen des API´s befinden sich in den Verzeichnissen WINBIND und PMBIND.<br>
<i>Ihr Programm ist an keine Plattform gebunden.</i></p>

<h3><!--mstheme--><font color="#000000"><a name="Help_Authoring_System"></a>Autorensystem zum Erzeugen kontextsensitiver Hilfe<!--mstheme--></font></h3>

<p><a href="images/hlp_inp.gif"><img src="hlp_inp_small.gif" alt="Screen Dump" hspace="15" width="100" height="70"></a><br clear="left">
Das integrierte System zum Erzeugen kontext-sensitiver Hilfe macht es sehr einfach, Ihre
Anwendung mit einer Online-Hilfe zu versehen. Das Autorensystem basiert auf der PDC
Hypertext Abstract Machine (HAM). Die Gestaltung des Hilfetextes erfolgt interaktiv. In
der Entwurfsphase können neue Hypertextverbindungen mit der Maus erzeugt oder
existierende verfolgt werden. Das Autorensystem gibt sowohl Windows-.RTF-Format, als auch
das OS/2-IPF-Format aus. Somit können Hilfesysteme sowohl für OS/2 als auch für Windows
erzeugt werden (Der Hilfe-Compiler HC.EXE ist in Visual Prolog nicht enthalten).<br>
<i>Einfaches Erzeugen eines Hilfesystems.</i><br clear="all">
</p>

<h3><!--mstheme--><font color="#000000"><a name="Resource_Import"></a>Resource Import<!--mstheme--></font></h3>

<p><a href="images/res_imp.gif"><img src="res_imp_small.gif" alt="Screen Dump" hspace="15" vspace="15" width="100" height="52"></a></p>

<p>Zusätzlich
zur Erzeugung von neuen Sourcedefinitionen, können Sie Sourcen aus bestehenden .VPR-,
.RES-, .EXE- oder .DLL-Dateien importieren. So können Sie Sourcen aus einer bereits
fertigen Anwendung in eine neue Visual Prolog Umgebung holen.</p>
&nbsp;<!--mstheme--></font><!--msnavigation--></td></tr><!--msnavigation--></table></body>
</html>
