/***********************************************************************

		Copyright (c) 1984 - 2000 Prolog Development Center A/S
		
		             VISUAL PROLOG

 Project:  DOCCNV
 FileName: DOCSTR2.DOM
 Purpose: Domains declaration for structural documents representation
 Written by: Oleg V. Erjomin
 Comments:

   7.07.96  Project Start
   
   Is based on :
     SGML formal grammar (ISO 8879: 1986)
     HTML 2.0 RFC-1866
     HTML 3.0 DTD by Dave Ruggett <drs@hplb.hpl.hp.com>

   See also:
     MARKUP.TXT - Markup languages comparision table
     DOCEXM.PRO - Simple examples of document encoding

     First build and test for syntax correction

   17.07.96
     The Entity attributes are simplified:
	Now we have only four types of attributies
	Faster but type unsafe

   24.07.96
      Concatenates blocks an textflows in common domain
      named flow.
	Surprise that in DL DT | DD may be not in pairs
	So we can simplify list domains

   3.12.96
      Adding Scripts and Applets

   11.6.97
      Exclude explicit support for the following obsolete
      elements : headelem(range,nextid)
                 flow_element(q,lang,person,acronym,abbrev,ins,del
                              math,spot,credit,fig,au)

   21.9.97
      Top level domains is renamed to doc_...
      
   23.4.2000 Revised according HTML 4.01 specification
   	REC-html401-19991224 by Dave Rugget et. al.
   	
   	Added tags  : ABBR, ACRONYM, Q, SPAN, INS, DEL
   	REvised Table support

****************************************************************************/

CONSTANTS
strucDoc_Dom_Included = 1

GLOBAL DOMAINS
%
%  Common Domains for typesafe description
%  See ISO 8879 SGML formal grammar
%
CDATA = string
PCDATA = string
IDREF = string
ID = string
NMTOKEN = string
URI = string
CDATALIST = CDATA*
HTTP_Method = string
NAME = string
BOOL = byte

    %
    %  The Overall Document Structure
    %
	doc = doc(doc_type,doc_head,doc_body)

	doc_type = string
    %=========================================================================
    %  The Document Head is a list of zero or more of head element entities
    %=========================================================================
	doc_head = doc_headelem*
	doc_headelem =
		doc_title(string); 			% Document title
		doc_isindex(doc_attlist);     		% It is index
		doc_base(doc_attlist);			% base URL address
		doc_style(doc_attlist,string txt);	% style notation
		doc_meta(doc_attlist); 			% meta-information
                doc_link(doc_attlist)               	% relation to some other

    %=========================================================================
    %  The Document Body is a list of zero or more of body element entities
    %=========================================================================
        doc_body = doc_body(doc_attlist,doc_flow)

     %-----------------------------------------------------------
     % Java Applet's Parameters
     %-----------------------------------------------------------
    	param=param(doc_attlist)
	paramlist=param*
     %-----------------------------------------------------------
     %  Frames
     %-----------------------------------------------------------
     	frame=frame(doc_attlist)
     	framelist=frame*
     % ========================================================================
     % Text Flows
     % ========================================================================
	doc_flow_element =
             %
             %  Top Level elements
             %
                div(doc_attlist,doc_flow);                      % Division
                span(doc_attlist,doc_flow);			% Span of elements (4.01)
                heading(integer head_level,doc_attlist,doc_flow);  % Headings
		hr(doc_attlist);	 		    	% ruller
		address(doc_attlist,doc_flow);		    	% address
		script(doc_attlist,string txt);			% Script
                applet(doc_attlist,paramlist,doc_flow);        	% Applet
                frameset(doc_attlist,framelist,doc_flow);	% Frame Set
                noframes(bool);					% No frames mark
	     %
	     % inline element - character level markup
	     %          dont break paragraph
	     %
		txt (string);
    		% Font markups
    		u(bool);		% underline
    		b(bool);		% bold
    		i(bool);		% italic
    		tt(bool);		% teletype (fixed font)
    		s(bool);		% strike through           (3.0)
    		big(bool);		% big print                (3.0)
    		small(bool);		% small print              (3.0)
    		sub(bool);		% subscript                (3.0)
    		sup(bool);		% superscript              (3.0)
    		font (bool,doc_attlist);  	%  for <FONT FACE = "Courier" SIZE = 12>
		%  Phrase markups
		em(bool);		% typographic emphasis, usualy italic
		strong(bool);		% strong emphasis, usualy bold
                dfn(bool);              % define instance of a term
		code(bool);		% example of code
		samp(bool);		% sequence of literal chars
		kbd(bool);		% text typed (keyboardede) by user
		var(bool);		% variable name
		cite(bool);		% citation
		abbr(bool);		% abbreviation             (4.01)
		acronym(bool);          % acronym                  (4.01)
		q(bool);                % inline quotation         (4.01)
		% Special markups
		br;			% line break;
		fn(doc_attlist,doc_flow);	% footnotes (may be popup)
		tab (doc_attlist);		% tabstops
		img (doc_attlist);		% images
		a(doc_attlist,doc_flow);	% hypertext anchors
	  %
          %  blocks - break up paragraphs or other block
	  %
		par(doc_attlist,doc_flow);			% paragraph
		ins(doc_attlist,doc_flow);			% inserted text
		del(doc_attlist,doc_flow);			% deleted text
		dl(doc_attlist,lh,li_list);			% definition list
		ol(doc_attlist,lh,li_list);			% ordered list
		ul(doc_attlist,lh,li_list);			% unordered list
		blockquote(doc_attlist,doc_flow);		% blockquotes
		preformatted(doc_attlist,doc_flow);		% preformatted text
		note (doc_attlist,doc_flow);			% admonishments
		table(doc_attlist,caption,trow_list);		% tables
		table4(doc_attlist,caption,
		       colgroup_list,
		       thead_list,
		       tfoot_list,
		       tbody_list);
		map(doc_attlist,area_list);			% image map
		form (doc_attlist,doc_flow);			% forms
		input (doc_attlist);                        	%   controls
		select(doc_attlist,option_list);		%   list boxes
		textarea (doc_attlist,string initial);		%   multiline editor
		tag (string Name,bool,doc_attlist)		% Common TAG


	doc_flow = doc_flow_element*

      % --------------------------------------------
      %  List's Elements Declarations
      % --------------------------------------------
	lh = lh(doc_attlist,doc_flow)

	li_list = li*
	li = li(doc_attlist,doc_flow);
	     dt(doc_attlist,doc_flow);
	     dd(doc_attlist,doc_flow)
      % ----------------------------------------------------------
      %  Map area
      % ----------------------------------------------------------
	area_list = area*
	area = area(doc_attlist)
     % ==========================================================
     % Table elements
     % ==========================================================
     	
	trow_list = trow*
	trow = trow(doc_attlist,cell_list)

	cell_list = cell*
	cell = th(doc_attlist,doc_flow);
	       td(doc_attlist,doc_flow)

     	thead = thead(doc_attlist,trow_list)	% (4.01)
     	tfoot = tfoot(doc_attlist,trow_list)	% (4.01)
     	tbody = tbody(doc_attlist,trow_list)	% (4.01)
     	thead_list = thead*
     	tfoot_list = tfoot*
     	tbody_list = tbody*
     	
     	colgroup = colgroup(doc_attlist,col_list)	% (4.01)
     	colgroup_list = colgroup*
     	col_list = col*					% (4.01)
     	col = col(doc_attlist)				% (4.01)

     % ---------------------------------------------------------
     %  Captions for tables
     % ---------------------------------------------------------
	caption = caption (doc_attlist,doc_flow)
     % ==========================================================
     %   FORMS
     % ==========================================================
	option_list = doc_option*
	doc_option=doc_option(doc_attlist,string item)
     % ==========================================================
     % Common Attributies for elements
     % ==========================================================
        doc_att = doc_att(string Name, doc_attval Val)
	% The attribute names declared in HTML DTD
	%
	%	id	target for hrefs
	%	lang	ISO languages i.e "en_uk", "dk" ...
	%	class	for subclassing elements
	%	md	message digest base64 encoded
	%	clear	room around some elements (left|right|all|no|40 en)
	%
	% There are four types of attributies
	%
	doc_attval = nill;
		atom(string);	% atom attribute
		lit(string);	% literan enclosed in quotes
		num(integer)	% numeric attributies

	doc_attlist = doc_att*


GLOBAL PREDICATES
	doclib_getversion(integer major, integer minor, integer build) - (o,o,o) language C
