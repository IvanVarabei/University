<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<META NAME="Template" CONTENT="C:\Program Files\Microsoft Office\Office\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<H1>Using Visual Prolog DLL's from Borland Delphi</H1>
<P>This directory contains examples of how to use a Dynamic Link Library (DLL) created with Visual Prolog in Borland Delphi (see <A HREF="../readme.htm">Using Visual Prolog DLL’s from other languages</A> for an overview of the examples)</P>
<P>All these examples uses the same Visual Prolog DLL’s that are found in the <A HREF="../DLLS/readme.htm">DLLS</A> directory, so these have to be compiled before any of the examples are compiled and run.</P>
<P>These examples should be compiled with Borland Delphi 3.0 or later.</P>
<H2>Notes for Delphi</H2>
<P>Please also read the <A HREF="../readme.htm#notes">common notes</A>.</P>

<UL>
<LI>The type of the import function in the Delphi code should be:</LI></UL>
<DIR>
<DIR>
<DIR>
<DIR>

<B><P>procedure</B> - if the predicate does not have a return value, and<BR>
<B>function</B> - if the predicate has a return value</P></DIR>
</DIR>
</DIR>
</DIR>


<UL>
<LI>The following table maps Visual Prolog types to Delphi types:</LI></UL>

<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=425>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P><B>Visual Prolog </B></TD>
<TD WIDTH="53%" VALIGN="TOP">
<B><P>Delphi</B></TD>
</TR>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P>integer</TD>
<TD WIDTH="53%" VALIGN="TOP">
<P>Integer</TD>
</TR>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P>real</TD>
<TD WIDTH="53%" VALIGN="TOP">
<P>Double</TD>
</TR>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P>long</TD>
<TD WIDTH="53%" VALIGN="TOP">
<P>Longint</TD>
</TR>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P>string</TD>
<TD WIDTH="53%" VALIGN="TOP">
<P>Pchar</TD>
</TR>
</TABLE>
</CENTER></P>


<UL>
<P ALIGN="CENTER"><LI>Output arguments corresponds to <I>var</I> arguments of appropriate types, example:</LI></P></UL>

<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=1 CELLPADDING=7 WIDTH=425>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P><B>Visual Prolog</B></TD>
<TD WIDTH="53%" VALIGN="TOP">
<B><P>Delphi</B></TD>
</TR>
<TR><TD WIDTH="47%" VALIGN="TOP">
<P>getReal(real) - (o)</TD>
<TD WIDTH="53%" VALIGN="TOP">
<P>getReal(var OutReal: Double)</TD>
</TR>
</TABLE>
</CENTER></P>


<UL>
<P ALIGN="CENTER"><LI>A Visual Prolog structure corresponds to a record in Delphi, and record arguments are <I>var</I> arguments to appropriate record types.</LI></P></UL>

<H2>Examples</H2><DIR>
<DIR>

<P><A HREF="Nongui/readme.htm">NONGUI</A>: Delphi project uses a non-GUI Visual Prolog DLL.</P>
<P><A HREF="Usevpi/readme.htm">USEVPI</A>: Delphi project uses a Visual Prolog DLL with VPI.</P></DIR>
</DIR>
</BODY>
</HTML>
