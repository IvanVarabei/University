#include <stdio.h>;
#include <iostream>
struct comp { //Структура с именем comp
	int Data; //Кикие то данные(могут быть любими, к примеру можно написать int key; char Data; или добавить еще какие то данные)
	comp *next;//Указатель типа comp на следующий эелемент
};
void s_push(comp **top, int D) { //функция типа void(ничего не возвращает) которая принимает указатль на вершину стека и переменную которая будет записываться в ячейку
	comp *q; //Создаем новый указатель q, который приравниваем к вершине стека. По сути это и есть наш новый элемент
	q = new comp(); //выделяем память для нового элемента
	q->Data = D; //Записываем D в Data элемента
	if (*top == nullptr) { //Если вершины нет, тоесть стек пустой
		*top = q; //вершиной стека будет новый элемент
	}
	else{
		q->next = *top; //Проводим связь от нового элемента, к вершине. Тоесть кладем книжку на вершину стопки.
		*top = q; //Пишем, что вершиной теперь является новый элемент
	}
}
void s_delete_key(comp **top) {//функция которая принимает вершину top
	int f = 0;
	comp *q = *top; //создаем указатель типа comp и приравниваем(ставим) его на вершину стека
	comp *prev = NULL;//создаем указатель на предыдуший элемент, с начала он будет пустым
	while (q != NULL) {//пока указатель q не путой, мы его будем проверять, если он все же пуст цикл заканчивается
		f = 0;
		if (q->Data % 2 == 0) {//проверка на четность
			if (q == *top) {//если такой указатель равен вершине, то есть элемент, который нам нужно удалить - вершина
				*top = q->next;//передвигаем вершину на следующий элемент
				delete[]q;//очищаем ячейку
				q = *top;
				f = 1;
			}
			else{
				prev->next = q->next;//Проводим связь от предыдущего элемента к следующему 
				delete[]q;//очищаем ячейку
				f = 1;
				q = prev;
			}
		}
		if (!f){
			prev = q; //запоминаем текущую ячейку как предыдущую
			q = q->next;
		}//перемещаем указатель q на следующий элемент
	}
}
void s_print(comp *top) { //принимает указатель на вершину стека		
	comp *q = top; //устанавливаем q на вершину
	while (q) { //пока q не пустой (while(q) эквивалентно while(q != NULL))
		printf_s("%i", q->Data);//выводим на экран данные ячейки стека
		q = q->next;//после того как вывели передвигаем q на следующий элемент(ячейку)
	}
}
void main() {
	comp *top = nullptr; //в начале программы у нас нет очереди, соответственно вершины нет, даем ей значение NULL
	for (int i = 1; i < 10; i++){
		s_push(&top, i);
	}
	s_print(top);//выводим
	s_delete_key(&top); //Затем удаляем 
	printf_s("\n");//переводим на новую строку
	s_print(top);//выводим
	printf_s("\n");//переводим на новую строку
	system("pause");//ставим на паузу
}