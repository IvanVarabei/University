#include<iostream>
using namespace std;
struct comp{
	double x;
	double i;
};
int** product(int** m1, int** m2, int size)
{
	int **m3 = new int*[size];
	for (int i = 0; i < size; i++)
		m3[i] = new int[size];
	for (int i = 0; i < size; i++)
		for (int j = 0; j < size; j++){
			m3[i][j] = 0;
			for (int g = 0; g < size; g++)
				m3[i][j] += m1[i][g] * m2[g][j];
		}
	return m3;
}
comp product(comp a,comp b){
	comp ret;
	ret.x = a.x*b.x-a.i*b.i;
	ret.i = a.x*b.i + a.i*b.x;
	return ret;
}
void main(){
	int size;
	cout << "Enter size of matrix : "; cin >> size;
	int **m1 = new int*[size], **m2 = new int*[size], **m3 = new int*[size];
	cout << "\nFerst matrix :\n";
	for (int i = 0; i < size;i++)
		m1[i] = new int[size];
	for (int i = 0; i < size; i++)
		for (int j = 0; j < size; j++){
			cout << "Enter element [" << i << "][" << j << "] :"; cin >> m1[i][j];
		}
	cout << "\nSecond matrix :\n";
	for (int i = 0; i < size; i++)
		m2[i] = new int[size];
	for (int i = 0; i < size; i++)
		for (int j = 0; j < size; j++){
			cout << "Enter element [" << i << "][" << j << "] :"; cin >> m2[i][j];
		}
	for (int i = 0; i < size; i++)
		m3[i] = new int[size];
	m3=product(m1,m2,size);//¬€«Œ¬ ‘”Õ ÷»»
	for (int i = 0; i < size; i++){
		for (int j = 0; j < size; j++)
			cout << m3[i][j] << "\t";
		cout << "\n";
	}
	comp a, b;
	comp composition;
	cout << "Enter first complex number x,i : ";
	cin >> a.x;
	cin >> a.i;
	cout << "Enter second complex number x,i : ";
	cin >> b.x;
	cin >> b.i;
	composition=product(a, b);
	cout << "\nComposition : " << composition.x << "+" << composition.i << "i\n";
	system("pause");
}






#include<iostream>
using namespace std;
struct comp{
	double x;
	double i;
};
struct NOTE{
	char *surname = new char;
	char *name = new char;
	int *d = new int[3];
	int salary;
};
void output(int** m1, int size){
	cout << "\nMatrix :\n";
	for (int i = 0; i < size; i++){
		for (int j = 0; j < size; j++)
			cout << m1[i][j] << "\t";
		cout << "\n";
	}
}
void output(comp a){
	cout << "\nComplex number : " << a.x << "+" << a.i << "i\n";
}
void output(NOTE* reciv){
	cout << "Surname : " << reciv->surname;
	cout << "\nName : " << reciv->name << "\nDate : ";
	for (int k = 0; k < 3; k++)
	{
		cout << reciv->d[k] << ".";
	}
	cout << "\nSalary : " << reciv->salary << "\n\n";
}
void main(){
	int size;
	cout << "Enter size of matrix : "; cin >> size;
	int **m1 = new int*[size];
	for (int i = 0; i < size; i++)
		m1[i] = new int[size];
	for (int i = 0; i < size; i++)
		for (int j = 0; j < size; j++){
			m1[i][j]=rand();
		}
	output(m1,size);//¬€«Œ¬ ‘”Õ ÷»»
	comp a;
	cout << "Enter first complex number x,i : ";
	cin >> a.x;
	cin >> a.i;
	output(a);//¬€«Œ¬ ‘”Õ ÷»»

	int number;
	NOTE *ms = new NOTE;
	cout << "Enter surname : "; cin >> ms->surname;
	cout << "Enter name : "; cin >> ms->name;
	cout << "Enter dd,mm,yyyy :\n"; cin >> ms->d[0]; cin >> ms->d[1]; cin >> ms->d[2];
	cout << "Enter salary : "; cin >> ms->salary;
	output(ms);//¬€«Œ¬ ‘”Õ ÷»»
	system("pause");
}





#include<iostream>
using namespace std;
template<typename T>
T proc(T** m, int sz){
	T sum = 0;
	for (int i = 0; i < sz; i++)
		sum += m[i][i];
	return sum;
}
void main(){
	int size,ch=1;
	while (1){
		cout << "Enter type of data :\n1)int\n2)double\n3)to STOP program\n"; cin >> ch;
		if (ch == 3)
			break;
		cout << "Enter size of matrix : "; cin >> size;
		if (ch == 1){
			int **m1 = new int*[size];
			for (int i = 0; i < size; i++)
				m1[i] = new int[size];
			for (int i = 0; i < size; i++)
				for (int j = 0; j < size; j++){
					cout << "Enter element [" << i << "][" << j << "] :"; cin >> m1[i][j];
				}
			cout << "Suma=" << proc(m1, size) << endl;
		}
		else{
			double **m1 = new double*[size];
			for (int i = 0; i < size; i++)
				m1[i] = new double[size];
			for (int i = 0; i < size; i++)
				for (int j = 0; j < size; j++){
					cout << "Enter element [" << i << "][" << j << "] :"; cin >> m1[i][j];
				}
			cout <<"Suma="<<proc(m1, size) << endl;
		}
	}
	system("pause");
}