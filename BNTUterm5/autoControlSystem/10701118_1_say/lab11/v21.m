clear all;
clc;
K = 1;                                     %параметры модели
T = 19;                                    %время моделирования
s = tf('s');                               %оператор Лапласа
W = K/(s^3 + 0.1*s^2 + 0.1*s + 1)     %модель объекта в Matlab'е
W1 = 1;
Wr = W*W1                                       %передаточная функция разомкнутой системы
Wz = feedback(Wr, 1)                     %передаточная функция замкнутой системы

% Построение переходной  функции разомкнутой системы

figure(1);
step(W, T);
grid on;

% Построение переходной  функции замкнутой системы

figure(2);
step(Wz, T);
grid on;

% Нахождение полюсов (корней)передаточной функции

display('Корни характеристического уравнения');
polusa = pole(Wz)

%получение коэффициентов характеристического полинома
%полинома стоящего в знаменателе передаточной функции замкнутой системы

display('Коэффициенты характеристического уравнения');
lm = poly(polusa)


%Кртерий Гурвица
display('Матрица Гурвица');
A = [lm(2), lm(4), 0;
     lm(1), lm(3), 0;
     0,     lm(2), lm(4);]
 
display('Определитель матрицы Гурвица');
det(A)

display('Первый минор матрицы Гурвица');
A1 = [lm(2)]
det(A1)

display('Второй минор матрицы Гурвица');
A2 = [lm(2), lm(4);
      lm(1), lm(3)]
 det(A2)
 
display('Третий минор матрицы Гурвица');
A3 = [lm(2), lm(4), 0;
      lm(1), lm(3), 0;
      0,     lm(2), lm(4);]
det(A3)


%Критерий Найквиста
figure(3);
nyquist(Wr);
grid on;

%Криртерий Михайлова
figure(4);
w = 0:0.01:2.5;
yr = j^3*w.^3 + 0.1*j^2*w.^2 + 0.1*j*w + 2;
x = real(yr);
y = imag(yr);
plot(x, y);
grid on;