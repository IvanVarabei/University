function_name("min","cf_and")
function_name("max","cf_or")
function_name("calc_cf","cf_add")
function_name("not_cf","cf_not")
txt1("treelevel","10")
txt1("mem_error","There isn't enough memory to run ESTA.\nPlease exit the program and release some memory if possible.")
txt1("system_call","Application activated - click OK to proceed with the ESTA session")
txt1("net_update","The file % has changed.Do you want to reload the file ?")
txt1("headtitle","ESTA")
txt1("abouthead","About ESTA")
txt1("abouttxt","ESTA\nExpert System Shell for Text Animation\nCopyright(c) 1992 version 4.1\nProlog Development Center\nH.J.Holst Vej 5A\n2605 Broendby\nDenmark")
txt1("cantopenfile","Can't open the file: %")
txt1("cantreadfile","Can't read the file: %")
txt1("savepicture","Save picture as: ")
txt1("pic_keep","Keep scale")
txt1("pic_stretch","Fit in frame")
txt1("pic_add","Import...")
txt1("pic_delete","Delete")
txt1("pic_edit","Edit...")
txt1("pic_paste","Paste...")
txt1("pic_import","Open a Bitmap or Metafile")
txt1("picture_database","Pictures Database")
txt1("pic_ex","% exists")
txt1("pic_not_found","Picture % not found")
txt1("pic_create","The pictures database is not found.\nDo you want to create it ?")
txt1("pic_savekb","Please save the untitled knowledge base.\nHaving done so you'll be able to see the pictures database.")
txt1("pic_clear","Do you realy want to clear pictures database ?")
txt1("pic_hotspot","&Hotspots")
txt1("pic_param","Parameter:")
txt1("pic_option","Option:")
txt1("pic_height","20")
txt1("pack_dba","The Pictures Database is packed")
txt1("exp_dba_title","Export Pictures Database")
txt1("exp_dba_msg","The Pictures Database is written in text format")
txt1("imp_dba_title","Import Pictures Database")
txt1("imp_dba_msg","The Pictures Database is appended from text format")
txt1("hotspot_header","Hotspot Editor")
txt1("all_visible","Set All to &Visible")
txt1("all_invisible","Set All to &Invisible")
txt1("hotspot_attr","Hotspot Attributes")
txt1("invisible","&Invisible")
txt1("visible","&Visible")
txt1("delete_hotspot","&Delete")
txt1("attr_hotspot","Attribute")
txt1("bind_hotspot","Binding")
txt1("hotspot_quest","Is the hotspot placed correct ?")
txt1("hotspot_adj","Hotspot Adjustment")
txt1("true"," true ")
txt1("false"," false ")
txt1("unknown"," unknown ")
txt1("unsolveable"," unsolveable ")
txt1("or_"," or ")
txt1("and_"," AND\n")
txt1("not_","it is not true that ")
txt1("edit_status","Modify %: %")
txt1("init_stat","Ready")
txt1("read","Reading")
txt1("read_fail","Reading aborted")
txt1("write","Writing")
txt1("stline","Section: %      Parameter: %")
txt1("stline1","Ln %  Col % ")
txt1("newkb","New knowledge base")
txt1("newfile","New textfile")
txt1("newlog","New dialog ")
txt1("open","Open knowledge base, dialog or textfile")
txt1("save","Save ")
txt1("save_as","Save As ")
txt1("print","Print")
txt1("printing","Printing")
txt1("on","on")
txt1("page","page %")
txt1("cancel"," cancelled")
txt1("margin","0")
txt1("print_cancel","Printing cancelled")
txt1("files","Knowledge base(*.kb);Text base(*.kbt);Log file(*.log);Text file(*.txt);All files(*.*)")
txt1("filesext","*.kb;*.kbt;*.log;*.txt;*.*")
txt1("ext_kb","*.kb")
txt1("ext_log","*.log")
txt1("ext_txt","*.txt")
txt1("filetype","List Files of Type:")
txt1("filename","File Name:")
txt1("drive","Drives:")
txt1("dir","Directories:")
txt1("new_kb1","Untitled.kb")
txt1("new_log1","Untitled.log")
txt1("new_textfile","Untitled.txt")
txt1("savewhat","Save knowledge base or dialog")
txt1("openkb","Open knowledge base")
txt1("opentkb","Open text knowledge base")
txt1("read_kbt","Read to memory")
txt1("edit_kbt","Read to editor")
txt1("exitkb","Exit ESTA")
txt1("savekb","Save current knowledge base in")
txt1("kb_loaded","Entered Knowledge Base: ")
txt1("log_loaded","Entered dialog: ")
txt1("kb_saved","Knowledge Base saved in ")
txt1("text_saved","Text saved in ")
txt1("log_saved","Dialog saved in ")
txt1("updated","updated")
txt1("saved","saved")
txt1("delsect","Delete section %")
txt1("delparam","Delete parameter %")
txt1("deleted","deleted")
txt1("savclose","Update % before closing")
txt1("savconsult","Update % before consultation")
txt1("close_edit","Close editor")
txt1("close_log","Close dialog")
txt1("log_copyheader","Copy text from dialog to clipboard")
txt1("log_copytext","Select text to copy to the clipboard")
txt1("log_copybtn","&Copy")
txt1("choose_sect","Choose a section")
txt1("choose_param","Choose a parameter")
txt1("choose_paropt","Choose an option for %")
txt1("chckknow","Check knowledge")
txt1("knowledgelist","Current knowledge base")
txt1("why","Why")
txt1("explain","Explain")
txt1("continue","Continue")
txt1("stop","Stop")
txt1("whyadv","Why was the last advice given ?")
txt1("whyquest","Why was the question being asked ?")
txt1("adv","Advice")
txt1("parmtree","Parameter tree")
txt1("secttree","Section tree")
txt1("findcaption","Find")
txt1("findtxt","Fi&nd What:")
txt1("findcase","Match &Case")
txt1("findup","&Up")
txt1("finddown","&Down")
txt1("finddir","Direction")
txt1("findnext","&Find Next")
txt1("findclose","Close")
txt1("findhelp","Help")
txt1("word_notfound","The string % not found")
txt1("replacecaption","Replace")
txt1("replwith","Re&place With")
txt1("repl","&Replace")
txt1("replall","Replace &All")
txt1("s_decl","section % : ' '")
txt1("p_decl","parameter % : ' '\ntype %\n")
txt1("p_bool","explanation ' '\n/* rules field */\nquestion ' '\npicture ' '")
txt1("p_cat","explanation ' '\noptions\n  option_1 - ' ',\n  option_2 - ' ',\n  option_n - ' '.\n/* rules field */\nquestion ' '\npicture ' '")
txt1("p_numb","explanation ' '\n/* rules field */\n/* range field */\nquestion ' '\npicture ' '")
txt1("p_text","explanation ' '\n/* rules field */\nquestion ' '\npicture ' '")
txt1("p_typel","boolean;category;text;number")
txt1("p_name","Name")
txt1("p_noname","Name is empty. Please type a name")
txt1("p_type","Type")
txt1("p_exist","Parameter already exists.")
txt1("s_exist","Section already exists.")
txt1("funclist","abs(X);arctan(X);cf_add(X,Y);cf_and(X,Y);cf_not(X);cf_or(X,Y);chr(N);concat(S1,S2);copy(S,N,M);cos(X);date();dec(X);delete(S,N,M);div(X,Y);ending(N,S);endstr(N,S);exp(X);frac(X);inc(X);int(X);ival(S);known(S);ln(X);log(X);lowcase(S);min(X,Y);max(X,Y);mod(X,Y);pos(S1,S2);power(X,Y);randomint(N);random();round(X);rval(S);sin(X);sqr(X);sqrt(X);startstr(N,S);str(X);strlen(S);tan(X);time();trunc(X);upcase(S)")
txt1("actlist","advice '';assign <parameter> := <expression>;call clear_all();call clear_value(<parameter>);call display(<filename>);call hyperadvice(<filename>,<number>);call restore_values(<filename>);call save_values(<filename>);call showpic(<picturename>);call sound(integer,integer);call system(<program_name>);chain <filename>;do <sectionname>;do_section_of <parametername>;exit;stop")
txt1("ins_pic","Select a picture name to insert")
txt1("ins_act","Select an action name to insert")
txt1("ins_func","Select a function name to insert")
txt1("ins_file","Select a filename to insert")
txt1("ins_all_file","All files (*.*)")
txt1("call_system","Application activated - click here to proceed with ESTA session")
txt1("cons_ver","It must be true that ")
txt1("cons_nolong1","Following advice no longer applies:\n")
txt1("cons_nolong2","\nEnd of advice no longer applying")
txt1("cons_kb","Knowledge base")
txt1("cons_sect","Section")
txt1("cons_parm","Parameter")
txt1("cons_sects","Sections")
txt1("cons_parms","Parameters")
txt1("cons_title","Title")
txt1("cons_picture","Pictures")
txt1("cons_quest","Question/Answer")
txt1("cons_textfile","Text file")
txt1("cons_logfile","Dialog")
txt1("cons_logfile1","Dialog with pictures")
txt1("cons_logfile2","Dialog without pictures")
txt1("cons_parmdef","Definition of parameter: %")
txt1("cons_sectdef","Definition of section: %")
txt1("cons_value_dir","Parameter valuelist")
txt1("cons_parm_dir","Parameterlist")
txt1("cons_sect_dir","Sectionlist")
txt1("cons_explain","Explain question")
txt1("cons_how_parm","How was parameter % established")
txt1("cons_within","Entered number must be in the legal range from: ")
txt1("cons_to","to ")
txt1("cons_isittrue","Is it true that ")
txt1("cons_whatis","What is the value of ")
txt1("cons_inferfail","Error in knowledge base, use the 'Check' command")
txt1("alien_val","Parameter defined in other kb")
txt1("main_checkok","No errors found")
txt1("main_fileext",".KB")
txt1("main_parmfront","#p")
txt1("main_sektfront","#s")
txt1("main_titlfront","#t")
txt1("main_errfn2","Error in filename or file does not exist")
txt1("main_symbmiss","Missing symbol in %:")
txt1("syntax_error","Syntax Error !")
txt1("endstr_err","The number % is bigger than the length of the string: %")
txt1("pars_illchar","Illegal character ")
txt1("pars_illexpect"," expected\n")
txt1("pars_strerr","String must be terminated by %")
txt1("pars_bool","Boolean expression expected")
txt1("pars_p_end","End of parameter definition expected")
txt1("pars_s","Keyword: section")
txt1("pars_p","Keyword: parameter")
txt1("pars_t","Keyword: type")
txt1("pars_o","Keyword: options")
txt1("pars_sectname","Section name without quotes")
txt1("pars_parname","Parameter name without quotes")
txt1("pars_procname","Procedure name")
txt1("pars_filename","File name")
txt1("pars_type","Type name(boolean,category,number,text)")
txt1("pars_cat","Category parameter name")
txt1("pars_a","Action")
txt1("pars_a1","Action (not if)")
txt1("pars_a2","Action/Expression")
txt1("pars_be","Beginning of boolean expression")
txt1("pars_exp","Beginning of expression")
txt1("pars_text","Text expression")
txt1("pars_period","Period")
txt1("pars_colon","Colon")
txt1("pars_equal","Equal sign")
txt1("pars_lpar","(")
txt1("pars_rpar",")")
txt1("pars_cp","Comma or period")
txt1("pars_sep","Comma or )")
txt1("pars_comma","Comma")
txt1("pars_number","Number")
txt1("pars_p_field","Parameter field")
txt1("pars_qpfield","Question/Picture field")
txt1("pars_picfield","Picture field")
txt1("pars_optfield","Option name or period")
txt1("pars_boolfield","Boolean value or period")
txt1("pars_argpic","Argument to PICTURE")
txt1("pars_argnot","Argument to NOT")
txt1("pars_argminus","Argument to MINUS")
txt1("pars_error","Syntax error")
txt1("pars_comm","Comment must not be nested")
txt1("pars_comm_end","Comment must be terminated by */")
txt1("tok_error_str"," token ")
txt1("cons_noladv","No advice has been given in this session")
txt1("cons2_rule1","\nby answering the following question:\n")
txt1("cons2_rudtryk","\nby the following expression:\n	")
txt1("cons2_rfolwrule","\nby using the following rule:\n	")
txt1("cons2_rif","if ")
txt1("cons2_rsiexp","\nby the following string expression\n	")
txt1("cons2_ropt","\nby the following option\n	")
txt1("cons2_whyl","The objective is to find out whether ")
txt1("cons2_whyn","The objective is to establish the value of ")
txt1("cons2_noexpl","\nThere is no further explanation for this question\n")
txt1("cons2_iddiff","You cannot change the value of the current parameter")
txt1("cons2_gotvalue"," was given the value ")
txt1("cons2_cause_adv","This advice was given because the following condition(s) \nwas (were) fulfilled\n	")
txt1("cons2_always","This advice always applies")
txt1("cons2_always2","This advice was given because ")
txt1("cons2_cursect","\nThis section is being executed because\n	")
txt1("cons2_curstartsect","\nThe start section is the first to be executed")
txt1("cons2_uniassign","\nby assignment in section\n")
txt1("cons2_alien","\nfrom reading a file\n")
txt1("cons2_eq"," is ")
txt1("chck_kb","Please check the knowledge base.\n")
txt1("chck_sect_err","Following section error(s) has been detected:\n")
txt1("chck_tree_parm","Undefined parameter(s) detected:\n")
txt1("chck_knowledge","Validating Knowledge Base")
txt1("chck_impossible"," impossible (lack of heap or interrupted)")
txt1("chck_sectudef","Undefined section")
txt1("sect_notdefined","Section % is not found.\nDo you want to define section % ?")
txt1("parm_notdefined","Parameter % is not found.\nDo you want to define parameter % ?")
txt1("chck_csect","Cyclical referencing (sections)")
txt1("chck_cparm","Cyclical referencing (parameters)")
txt1("chck_pnotdef","Parameter not defined")
txt1("chck_fnotdef","Function not defined")
txt1("chck_pnotused","Parameter(s) not used")
txt1("chck_snotused","Section(s) not used")
txt1("chck_typeerror","Type error in expression")
txt1("chck_cattypeerror","do_section_of take only a category parameter")
txt1("chck_notdef","Not defined")
txt1("chck_ill_arity","Illegal number of arguments, should be ")
txt1("chck_snotfound","Section 'start' not found")
txt1("wrex_cond","\nThis is necessary to evaluate the condition\n")
txt1("wrex_parml","\nThis will help discover whether\n")
txt1("wrex_parmn","\nwhich will establish the value of\n")
txt1("wrex_vol","\nwhich will establish the value after volunteered information\n")
txt1("wrex_exp","\nwhich is necessary to evaluate the expression\n")
txt1("wrex_nextdisplay","\nwhich is necessary to show the text\n")
txt1("wrex_nextrefer","\nwhich is necessary to refer the section\n")
txt1("wrex_nextquit","\nwhich is necessary to quit the section\n")
txt1("wrex_nextexit","\nwhich is necessary to terminate the consultation\n")
txt1("wrex_nextcall","\nwhich is needed to call the external predicate\n")
txt1("wrex_ass1","\nTo assign a value to the parameter:\n")
txt1("wrex_ass2","\nevaluated from the following expression:\n")
txt1("aux_yes","Yes")
txt1("aux_no","No")
txt1("aux_unknown","Unknown")
txt1("parmnotfound","Parameter not found")
txt1("has_value","Parameter already has a value")
txt1("answ_intg_err","Answer is not a number. Examples: 10 10.5")
txt1("div_zero_err","Division by zero is not allowed")
txt1("si_notinst","\nString expression in question contains unevaluated parameters")
txt1("no_rule_determ","\nRule-determined parameters cannot be changed")
txt1("answer_err","\nWrong answer")
txt1("proc_error","Error in procedure call. Illegal arguments")
txt1("func_error","Error in function call. Illegal arguments")
txt1("func_name_error","Can't find the function name: %")
txt1("proc_name_error","Can't find the procedure name: %")
txt1("system_error","Can't execute % \nWinexec error: %")
txt1("text_to_big_err","The text is too big to be shown")
txt1("quest_only","Only question determined parameters can be changed.")
txt1("sys_name","ESTA")
txt1("usr_name","USER")
txt1("adv_name","ADVICE")
tok_keyw_str(period,".")
tok_keyw_str(colon,":")
tok_keyw_str(comma,",")
tok_keyw_str(andsign,"&")
tok_keyw_str(lpar,"(")
tok_keyw_str(rpar,")")
tok_keyw_str(plus,"+")
tok_keyw_str(minus,"-")
tok_keyw_str(mult,"*")
tok_keyw_str(div,"/")
tok_keyw_str(eq,"=")
tok_keyw_str(lt,"<")
tok_keyw_str(gt,">")
tok_keyw_str(if_,"if")
tok_keyw_str(not_,"not")
tok_keyw_str(and_,"and")
tok_keyw_str(or_,"or")
tok_keyw_str(true,"true")
tok_keyw_str(false,"false")
tok_keyw_str(unknown,"unknown")
tok_keyw_str(fact,"boolean")
tok_keyw_str(phrase,"text")
tok_keyw_str(number,"number")
tok_keyw_str(category,"category")
tok_keyw_str(options,"options")
tok_keyw_str(range,"range")
tok_keyw_str(rule,"rules")
tok_keyw_str(explanation,"explanation")
tok_keyw_str(askable,"question")
tok_keyw_str(section,"section")
tok_keyw_str(reference,"do")
tok_keyw_str(reference_par,"do_section_of")
tok_keyw_str(quit,"quit")
tok_keyw_str(quit,"stop")
tok_keyw_str(descriptor,"descriptor")
tok_keyw_str(type,"type")
tok_keyw_str(parameter,"parameter")
tok_keyw_str(image,"picture")
tok_keyw_str(advice,"advice")
tok_keyw_str(call,"call")
tok_keyw_str(exit,"exit")
tok_keyw_str(chain,"chain")
tok_keyw_str(assign,"assign")
tok_str1(id(""),"identifier ")
tok_str1(s(""),"string ")
tok_str1(float(0),"real")
tok_str1(int(0),"integer")
tok_str1(eof,"")
tok_str1(lt,"<")
tok_str1(gt,">")
tok_str1(plus,"+")
tok_str1(minus,"-")
tok_str1(mult,"*")
tok_str1(div,"/")
tok_str1(lpar,"(")
tok_str1(rpar,")")
tok_str1(dotdot,"..")
tok_str1(comma,",")
tok_str1(period,".")
tok_str1(andsign,"+")
tok_str1(colon,":")
tok_str1(eq,"=")
tok_str1(ne,"<>")
tok_str1(le,"<=")
tok_str1(ge,">=")
